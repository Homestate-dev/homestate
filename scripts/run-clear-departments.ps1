# Script de PowerShell para limpiar todos los departamentos
# Ejecutar desde la ra√≠z del proyecto

Write-Host "üöÄ Iniciando script de limpieza de departamentos..." -ForegroundColor Green
Write-Host "=" * 50

# Verificar que estamos en el directorio correcto
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Error: Debes ejecutar este script desde la ra√≠z del proyecto" -ForegroundColor Red
    exit 1
}

# Verificar que existe el script
if (-not (Test-Path "scripts/clear-all-departments-heroku.js")) {
    Write-Host "‚ùå Error: No se encontr√≥ el script clear-all-departments-heroku.js" -ForegroundColor Red
    exit 1
}

Write-Host "üìã Ejecutando limpieza de departamentos..." -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è  ADVERTENCIA: Esta acci√≥n eliminar√° TODOS los departamentos de la base de datos" -ForegroundColor Red
Write-Host "   Esta acci√≥n NO se puede deshacer." -ForegroundColor Red

# Preguntar confirmaci√≥n
$confirmation = Read-Host "¬øEst√°s seguro de que quieres continuar? (escribe 'SI' para confirmar)"

if ($confirmation -ne "SI") {
    Write-Host "‚ùå Operaci√≥n cancelada por el usuario" -ForegroundColor Yellow
    exit 0
}

Write-Host "‚úÖ Confirmaci√≥n recibida. Ejecutando limpieza..." -ForegroundColor Green

# Ejecutar el script
try {
    node scripts/clear-all-departments-heroku.js
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "üéâ ¬°Limpieza completada exitosamente!" -ForegroundColor Green
        Write-Host "   Todos los departamentos han sido eliminados de la base de datos." -ForegroundColor Green
    } else {
        Write-Host "‚ùå Error durante la ejecuci√≥n del script" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Error al ejecutar el script: $_" -ForegroundColor Red
    exit 1
}

Write-Host "=" * 50
Write-Host "‚úÖ Script completado" -ForegroundColor Green 